#!/usr/bin/env bash

# Sources:
# https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html

_citation_key_ck_completion() {
    # this stops autocompletion from adding the same word multiple times after it was added the first time

    BibDir=$(awk -F "=" '/BibDir/ {print $2}' $HOME/.config/ck/ck.config)
    TagDir=$(awk -F "=" '/TagDir/ {print $2}' $HOME/.config/ck/ck.config)

    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ "${COMP_CWORD}" == "1" ]
    then
        local line=`ck | grep -n "^Commands:$" | cut -f 1 -d':'`
        local ck_subcommands=`ck | tail -n +$(($line+1)) | cut -f 3 -d' '`

        local suggestions=(`compgen -W "$(echo $ck_subcommands)" -- "${cur}"`)
        COMPREPLY=("${suggestions[@]}")
    else

        case ${COMP_WORDS[1]} in
            bib|info|open|queue|read|rename|rm|tag|untag)
            local candidates=`ck list -s`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            dequeue|finished)
            local candidates=`ck list -r -s queue/to-read`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            list)
            local candidates=`find ${TagDir} -type d -not -path "*/.git/*"`
            local IFS=$'\n' # avoid confusion about spaces
            COMPREPLY=(`compgen -W "${candidates[@]}" -- ${cur}`)
            ;;
        esac
    fi
}

complete -F _citation_key_ck_completion ck
