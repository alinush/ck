#!/usr/bin/env bash

# Sources:
# https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html

_citation_key_ck_completion() {
    # this stops autocompletion from adding the same word multiple times after it was added the first time

    local config_file=`ck config`
    BibDir=$(awk -F "=" '/BibDir/ {print $2}' "$config_file")
    TagDir=$(awk -F "=" '/TagDir/ {print $2}' "$config_file")

    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ "${COMP_CWORD}" == "1" ]
    then
        local line=`ck | grep -n "^Commands:$" | cut -f 1 -d':'`
        local ck_subcommands=`ck | tail -n +$(($line+1)) | cut -f 3 -d' '`

        local suggestions=(`compgen -W "$(echo $ck_subcommands)" -- "${cur}"`)
        COMPREPLY=("${suggestions[@]}")
    else

        case ${COMP_WORDS[1]} in
            b|bi|bib|i|in|inf|info|o|op|ope|open|q|qu|que|queu|queue|ren|rena|renam|rename|rm|tag|u|un|unt|unta|untag)
            local candidates=`ck list -s`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            rea|read)
            local candidates=`ck list -r -s queue/to-read queue/finished`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            d|de|deq|dequ|deque|dequeu|dequeue)
            local candidates=`ck list -r -s queue/to-read`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            f|fi|fin|fini|finish|finishe|finished)
            local candidates=`ck list -r -s queue/to-read queue/reading`
            if [ "${#candidates}" != "0" ]; then
                COMPREPLY=(`compgen -W "$(echo ${candidates[@]})" -- "${cur}"`)
            fi
            ;;
            l|li|lis|list)
            if [ "${#COMP_WORDS[@]}" -gt "2" ] && [ "${COMP_WORDS[2]}" == "-r" ]; then
                # we don't complete for relative paths for now
                # TODO
		true
            else
                local candidates=`find ${TagDir} -type d -not -path "*/.git*"`
                local IFS=$'\n' # avoid confusion about spaces
                COMPREPLY=(`compgen -W "${candidates[@]}" -- ${cur}`)
            fi
            ;;
        esac
    fi
}

complete -F _citation_key_ck_completion ck
